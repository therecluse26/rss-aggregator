name: Update Master Feed

on:
  schedule:
    - cron: "0 * * * *"  # Runs at the top of every hour
  release:
    types: [published]
  workflow_dispatch:

jobs:
  update-master-feed:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Determine Release Tag
        id: release_tag
        run: |
          if [ -n "${{ github.event.release.tag_name }}" ]; then
            echo "Using release tag from event: ${{ github.event.release.tag_name }}"
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            LATEST_TAG=$(gh release list --limit 1 | head -n 1 | awk '{print $1}')
            if [ -n "$LATEST_TAG" ]; then
              echo "Using latest release tag: $LATEST_TAG"
              echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
            else
              echo "No releases found. Exiting."
              exit 0
            fi
          fi

      - name: Download Release Asset using GitHub CLI
        run: |
          gh release download "${{ steps.release_tag.outputs.tag }}" --pattern "rss_aggregator" --dir .
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Verify Downloaded Asset
        run: |
          if [ ! -f "rss_aggregator" ]; then
            echo "Release asset 'rss_aggregator' not found. Exiting."
            exit 0
          fi

      - name: Make Asset Executable
        run: chmod +x rss_aggregator

      - name: Run Release Binary to Generate master_feed.xml
        run: ./rss_aggregator

      - name: Commit changes if master_feed.xml updated
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [ -n "$(git status --porcelain master_feed.xml)" ]; then
            git add master_feed.xml
            git commit -m "Update master feed [skip ci]"
            git push origin HEAD:main
          else
            echo "No changes in master_feed.xml, skipping commit."
          fi
